{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mihai\\\\Desktop\\\\react-configurator\\\\src\\\\components\\\\Cart.jsx\";\nimport React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport List from '@material-ui/core/List';\nimport TextField from '@material-ui/core/TextField';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Button from '@material-ui/core/Button';\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass Cart extends React.Component {\n  constructor() {\n    super();\n\n    this.totalPrice = () => {\n      return this.props.cart.reduce((sum, item) => item.quantity * item.product.price + sum, 0); // tot ce este cu this.props este legat cu store\n    };\n\n    this.modifyProduct = (index, e) => {\n      this.props.modifyProductQuantity({\n        index,\n        itemQuantity: e.target.value\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.getPromo = () => {\n      if (this.state.promo === \"1111\") {\n        return 500;\n      }\n\n      return 0;\n    };\n\n    this.handleClose = e => {\n      e.preventDefault();\n\n      if (this.form.current.reportValidity()) {\n        const orders = JSON.parse(localStorage.getItem('orders')) || []; // scoate continutul din local storage , daca nui nimic pune masiv gol\n\n        const order = {\n          items: this.props.cart,\n          //continutul la cart din store\n          price: this.totalPrice(),\n          total: this.totalPrice() - this.getPromo(),\n          user: {\n            first_name: this.state.first_name,\n            second_name: this.state.second_name,\n            email: this.state.email,\n            phone: this.state.phone,\n            promo: this.state.promo\n          },\n          date: new Date().toISOString().split('T')[0] // primim data\n\n        };\n        orders.push(order);\n        localStorage.setItem('orders', JSON.stringify(orders)); //face push in masiv apoi in local storage\n\n        document.location.reload(); //update la pagina dupa checkout\n      }\n    };\n\n    this.state = {\n      open: false,\n      first_name: \"\",\n      second_name: \"\",\n      email: \"\",\n      phone: \"\",\n      promo: \"\"\n    };\n    this.form = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.cart.length // validare daca cosul este gol atunci se executa codul   tot if se face prin operator ternar\n    ?\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"store-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      dense: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, this.props.cart.map((item, index) => {\n      // map = ciclu\n      const labelId = `checkbox-list-secondary-label-${index}`;\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: index,\n        button: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        alt: \"\",\n        src: require(\"../\" + item.product.image),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        id: labelId,\n        primary: item.product.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"standard-basic\",\n        onChange: e => this.modifyProduct(index, e) //== modifyProduct(index, $event)\n        ,\n        value: item.quantity,\n        placeholder: \"1\",\n        type: \"number\",\n        className: \"count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }), \" x \", item.product.price, \" $\", /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => this.props.deleteProduct(index),\n        edge: \"start\",\n        color: \"inherit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CancelIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 27\n        }\n      })))));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-total-price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, \" Total: \", this.totalPrice(), \" $\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.handleClickOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, \"Checkout\"), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      ref: this.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }, \"Checkout\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"standard-basic\",\n      onChange: e => this.setState({\n        first_name: e.target.value\n      }),\n      label: \"First Name*\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"standard-basic\",\n      onChange: e => this.setState({\n        second_name: e.target.value\n      }),\n      label: \"Last Name*\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      type: \"number\",\n      required: true,\n      id: \"standard-basic\",\n      onChange: e => this.setState({\n        phone: e.target.value\n      }),\n      label: \"Phone*\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      type: \"email\",\n      required: true,\n      id: \"standard-basic\",\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      label: \"Email*\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      label: \"Promotional code*\",\n      onChange: e => this.setState({\n        promo: e.target.value\n      }),\n      className: \"padding-child\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"to-pay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 23\n      }\n    }, \" Total: \", this.totalPrice(), \" $\"), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 23\n      }\n    }, \" Promotion: \", this.getPromo(), \" $\"), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 23\n      }\n    }, \"To Pay: \", this.totalPrice() - this.getPromo(), \" $\"))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      onClick: this.handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, \"Checkout\")))))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, \"Card is empty!\"));\n  }\n\n} //legatura componentului cu store\n\n\nexport default connect(state => ({\n  cart: state.cart //primirea datelor  this.props cart => state.card\n\n}), dispatch => ({\n  deleteProduct: payload => {\n    dispatch({\n      type: \"DELETE_PRODUCT\",\n      payload\n    });\n  },\n  modifyProductQuantity: payload => {\n    dispatch({\n      type: \"MODIFY_PRODUCT\",\n      payload\n    });\n  }\n}))(Cart); // dispatch cheama din store meetoda\n//payload datele care se transmit","map":{"version":3,"sources":["C:/Users/Mihai/Desktop/react-configurator/src/components/Cart.jsx"],"names":["React","ListItem","ListItemAvatar","Avatar","ListItemText","ListItemSecondaryAction","List","TextField","CancelIcon","Button","connect","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Typography","Cart","Component","constructor","totalPrice","props","cart","reduce","sum","item","quantity","product","price","modifyProduct","index","e","modifyProductQuantity","itemQuantity","target","value","handleClickOpen","setState","open","getPromo","state","promo","handleClose","preventDefault","form","current","reportValidity","orders","JSON","parse","localStorage","getItem","order","items","total","user","first_name","second_name","email","phone","date","Date","toISOString","split","push","setItem","stringify","document","location","reload","createRef","render","length","map","labelId","require","image","name","deleteProduct","dispatch","payload","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,IAAN,SAAmBjB,KAAK,CAACkB,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAadC,UAbc,GAaD,MAAM;AACjB,aAAO,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,CAACC,GAAD,EAAMC,IAAN,KAAgBA,IAAI,CAACC,QAAL,GAAgBD,IAAI,CAACE,OAAL,CAAaC,KAA9B,GAAuCJ,GAA7E,EAAkF,CAAlF,CAAP,CADiB,CAC2E;AAC7F,KAfa;;AAAA,SAiBdK,aAjBc,GAiBE,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC5B,WAAKV,KAAL,CAAWW,qBAAX,CAAiC;AAACF,QAAAA,KAAD;AAAQG,QAAAA,YAAY,EAAEF,CAAC,CAACG,MAAF,CAASC;AAA/B,OAAjC;AACD,KAnBa;;AAAA,SAqBdC,eArBc,GAqBI,MAAM;AACtB,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KAzBa;;AAAA,SA2BdC,QA3Bc,GA2BH,MAAM;AACf,UAAI,KAAKC,KAAL,CAAWC,KAAX,KAAqB,MAAzB,EAAiC;AAC/B,eAAO,GAAP;AACD;;AACD,aAAO,CAAP;AACD,KAhCa;;AAAA,SAkCdC,WAlCc,GAkCCX,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACY,cAAF;;AAEA,UAAI,KAAKC,IAAL,CAAUC,OAAV,CAAkBC,cAAlB,EAAJ,EAAwC;AACtC,cAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,KAA8C,EAA7D,CADsC,CAC0B;;AAEhE,cAAMC,KAAK,GAAG;AACZC,UAAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWC,IADN;AACW;AACvBM,UAAAA,KAAK,EAAE,KAAKR,UAAL,EAFK;AAGZkC,UAAAA,KAAK,EAAE,KAAKlC,UAAL,KAAoB,KAAKmB,QAAL,EAHf;AAIZgB,UAAAA,IAAI,EAAE;AACJC,YAAAA,UAAU,EAAE,KAAKhB,KAAL,CAAWgB,UADnB;AAEJC,YAAAA,WAAW,EAAE,KAAKjB,KAAL,CAAWiB,WAFpB;AAGJC,YAAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWkB,KAHd;AAIJC,YAAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWmB,KAJd;AAKJlB,YAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AALd,WAJM;AAWZmB,UAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAXM,CAWiC;;AAXjC,SAAd;AAaAhB,QAAAA,MAAM,CAACiB,IAAP,CAAYZ,KAAZ;AACAF,QAAAA,YAAY,CAACe,OAAb,CAAqB,QAArB,EAA+BjB,IAAI,CAACkB,SAAL,CAAenB,MAAf,CAA/B,EAjBsC,CAiBiB;;AACvDoB,QAAAA,QAAQ,CAACC,QAAT,CAAkBC,MAAlB,GAlBsC,CAkBX;AAC5B;AACF,KAzDa;;AAEZ,SAAK7B,KAAL,GAAa;AACXF,MAAAA,IAAI,EAAE,KADK;AAEXkB,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,WAAW,EAAE,EAHF;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,KAAK,EAAE,EALI;AAMXlB,MAAAA,KAAK,EAAE;AANI,KAAb;AAQA,SAAKG,IAAL,GAAY5C,KAAK,CAACsE,SAAN,EAAZ;AACD;;AAgDDC,EAAAA,MAAM,GAAG;AACP,wBACE,0CACG,KAAKlD,KAAL,CAAWC,IAAX,CAAgBkD,MAAhB,CAAuB;AAAvB;AAAA;AACG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnD,KAAL,CAAWC,IAAX,CAAgBmD,GAAhB,CAAoB,CAAChD,IAAD,EAAOK,KAAP,KAAiB;AAAG;AACvC,YAAM4C,OAAO,GAAI,iCAAgC5C,KAAM,EAAvD;AACA,0BACE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,KAAf;AAAsB,QAAA,MAAM,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,GAAG,EAAC,EADN;AAEE,QAAA,GAAG,EAAE6C,OAAO,CAAC,QAAQlD,IAAI,CAACE,OAAL,CAAaiD,KAAtB,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAOE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAEF,OAAlB;AAA2B,QAAA,OAAO,EAAEjD,IAAI,CAACE,OAAL,CAAakD,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,eAQE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,gBAAd;AACW,QAAA,QAAQ,EAAG9C,CAAD,IAAO,KAAKF,aAAL,CAAmBC,KAAnB,EAA0BC,CAA1B,CAD5B,CAC0D;AAD1D;AAEW,QAAA,KAAK,EAAEN,IAAI,CAACC,QAFvB;AAEiC,QAAA,WAAW,EAAC,GAF7C;AAEiD,QAAA,IAAI,EAAC,QAFtD;AAGW,QAAA,SAAS,EAAC,OAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,SAIoCD,IAAI,CAACE,OAAL,CAAaC,KAJjD,qBAME,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE,MAAM,KAAKP,KAAL,CAAWyD,aAAX,CAAyBhD,KAAzB,CAA3B;AAA4D,QAAA,IAAI,EAAC,OAAjE;AACY,QAAA,KAAK,EAAC,SADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CANF,CADF,CARF,CADF;AAwBD,KA1BA,CADH,CADA,eA8BA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BA,eA+BA;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA4C,KAAKV,UAAL,EAA5C,OADF,eAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,WAAlC;AAA8C,MAAA,OAAO,EAAE,KAAKgB,eAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAE,KAAKI,KAAL,CAAWF,IADnB;AAEE,MAAA,OAAO,EAAE,KAAKI,WAFhB;AAGE,yBAAgB,mBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAM,MAAA,GAAG,EAAE,KAAKE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,QAAQ,EAAE,IADZ;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,QAAQ,EAAGb,CAAD,IAAO,KAAKM,QAAL,CAAc;AAC7BmB,QAAAA,UAAU,EAAEzB,CAAC,CAACG,MAAF,CAASC;AADQ,OAAd,CAHnB;AAME,MAAA,KAAK,EAAC,aANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE,oBAAC,SAAD;AACE,MAAA,QAAQ,EAAE,IADZ;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,QAAQ,EAAGJ,CAAD,IAAO,KAAKM,QAAL,CAAc;AAC7BoB,QAAAA,WAAW,EAAE1B,CAAC,CAACG,MAAF,CAASC;AADO,OAAd,CAHnB;AAME,MAAA,KAAK,EAAC,YANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAiBE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAE,IAFZ;AAGE,MAAA,EAAE,EAAC,gBAHL;AAIE,MAAA,QAAQ,EAAGJ,CAAD,IAAO,KAAKM,QAAL,CAAc;AAC7BsB,QAAAA,KAAK,EAAE5B,CAAC,CAACG,MAAF,CAASC;AADa,OAAd,CAJnB;AAOE,MAAA,KAAK,EAAC,QAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,eA0BE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,QAAQ,EAAE,IAFZ;AAGE,MAAA,EAAE,EAAC,gBAHL;AAIE,MAAA,QAAQ,EAAGJ,CAAD,IAAO,KAAKM,QAAL,CAAc;AAC7BqB,QAAAA,KAAK,EAAE3B,CAAC,CAACG,MAAF,CAASC;AADa,OAAd,CAJnB;AAOE,MAAA,KAAK,EAAC,QAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,CADF,eAqCE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,mBADR;AAEE,MAAA,QAAQ,EAAGJ,CAAD,IAAO,KAAKM,QAAL,CAAc;AAC7BI,QAAAA,KAAK,EAAEV,CAAC,CAACG,MAAF,CAASC;AADa,OAAd,CAFnB;AAKE,MAAA,SAAS,EAAC,eALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CArCF,eA8CE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAqB,KAAKf,UAAL,EAArB,OADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAyB,KAAKmB,QAAL,EAAzB,OAFF,eAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAqB,KAAKnB,UAAL,KAAoB,KAAKmB,QAAL,EAAzC,OAHF,CA9CF,CAFF,eAsDE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKG,WAAtB;AAAmC,MAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKA,WAApC;AAAiD,MAAA,KAAK,EAAC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CAtDF,CALF,CALF,CA/BA,CADH,gBA4GG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA7GN,CADF;AAkHD;;AA/KgC,C,CAiLnC;;;AACA,eAAehC,OAAO,CACpB8B,KAAK,KAAK;AACRlB,EAAAA,IAAI,EAAEkB,KAAK,CAAClB,IADJ,CACS;;AADT,CAAL,CADe,EAIpByD,QAAQ,KAAK;AACXD,EAAAA,aAAa,EAAGE,OAAD,IAAa;AAC1BD,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,gBAAP;AAAyBD,MAAAA;AAAzB,KAAD,CAAR;AACD,GAHU;AAIXhD,EAAAA,qBAAqB,EAAGgD,OAAD,IAAa;AAClCD,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,gBAAP;AAAyBD,MAAAA;AAAzB,KAAD,CAAR;AACD;AANU,CAAL,CAJY,CAAP,CAYb/D,IAZa,CAAf,C,CAaA;AACA","sourcesContent":["import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport List from '@material-ui/core/List'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Button from '@material-ui/core/Button'\r\nimport {connect} from \"react-redux\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass Cart extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      open: false,\r\n      first_name: \"\",\r\n      second_name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      promo: \"\"\r\n    }\r\n    this.form = React.createRef()\r\n  }\r\n\r\n  totalPrice = () => {\r\n    return this.props.cart.reduce((sum, item) => (item.quantity * item.product.price) + sum, 0) // tot ce este cu this.props este legat cu store\r\n  }\r\n\r\n  modifyProduct = (index, e) => {\r\n    this.props.modifyProductQuantity({index, itemQuantity: e.target.value})\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      open: true\r\n    })\r\n  };\r\n\r\n  getPromo = () => {\r\n    if (this.state.promo === \"1111\") {\r\n      return 500\r\n    }\r\n    return 0\r\n  };\r\n\r\n  handleClose = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (this.form.current.reportValidity()) {\r\n      const orders = JSON.parse(localStorage.getItem('orders')) || [] // scoate continutul din local storage , daca nui nimic pune masiv gol\r\n\r\n      const order = {\r\n        items: this.props.cart,//continutul la cart din store\r\n        price: this.totalPrice(),\r\n        total: this.totalPrice() - this.getPromo(),\r\n        user: {\r\n          first_name: this.state.first_name,\r\n          second_name: this.state.second_name,\r\n          email: this.state.email,\r\n          phone: this.state.phone,\r\n          promo: this.state.promo\r\n        },\r\n        date: new Date().toISOString().split('T')[0] // primim data\r\n      }\r\n      orders.push(order)\r\n      localStorage.setItem('orders', JSON.stringify(orders)) //face push in masiv apoi in local storage\r\n      document.location.reload() //update la pagina dupa checkout\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.cart.length // validare daca cosul este gol atunci se executa codul   tot if se face prin operator ternar\r\n          ? <div className=\"store-card\">\r\n            <List dense>\r\n              {this.props.cart.map((item, index) => {  // map = ciclu\r\n                const labelId = `checkbox-list-secondary-label-${index}`;\r\n                return (\r\n                  <ListItem key={index} button>\r\n                    <ListItemAvatar>\r\n                      <Avatar\r\n                        alt=\"\"\r\n                        src={require(\"../\" + item.product.image)}\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText id={labelId} primary={item.product.name}/>\r\n                    <ListItemSecondaryAction>\r\n                      <div>\r\n                        <TextField id=\"standard-basic\"\r\n                                   onChange={(e) => this.modifyProduct(index, e)} //== modifyProduct(index, $event)\r\n                                   value={item.quantity} placeholder=\"1\" type=\"number\"\r\n                                   className=\"count\"/> x {item.product.price} $\r\n\r\n                        <IconButton onClick={() => this.props.deleteProduct(index)} edge=\"start\"\r\n                                    color=\"inherit\">\r\n                          <CancelIcon/>\r\n                        </IconButton>\r\n                      </div>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n            <div className=\"divider\"/>\r\n            <div className=\"\">\r\n              <span className=\"text-total-price\"> Total: {this.totalPrice()} $</span>\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickOpen}>\r\n                Checkout\r\n              </Button>\r\n              <Dialog\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n              >\r\n                <form ref={this.form}>\r\n                  <DialogTitle id=\"form-dialog-title\">Checkout</DialogTitle>\r\n                  <DialogContent>\r\n                    <div className=\"client-info\">\r\n                      <TextField\r\n                        required={true}\r\n                        id=\"standard-basic\"\r\n                        onChange={(e) => this.setState({\r\n                          first_name: e.target.value\r\n                        })}\r\n                        label=\"First Name*\"\r\n                      />\r\n                      <TextField\r\n                        required={true}\r\n                        id=\"standard-basic\"\r\n                        onChange={(e) => this.setState({\r\n                          second_name: e.target.value\r\n                        })}\r\n                        label=\"Last Name*\"\r\n                      />\r\n                      <TextField\r\n                        type=\"number\"\r\n                        required={true}\r\n                        id=\"standard-basic\"\r\n                        onChange={(e) => this.setState({\r\n                          phone: e.target.value\r\n                        })}\r\n                        label=\"Phone*\"\r\n                      />\r\n                      <TextField\r\n                        type=\"email\"\r\n                        required={true}\r\n                        id=\"standard-basic\"\r\n                        onChange={(e) => this.setState({\r\n                          email: e.target.value\r\n                        })}\r\n                        label=\"Email*\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"padding\">\r\n                      <TextField\r\n                        label=\"Promotional code*\"\r\n                        onChange={(e) => this.setState({\r\n                          promo: e.target.value\r\n                        })}\r\n                        className=\"padding-child\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"to-pay\">\r\n                      <Typography> Total: {this.totalPrice()} $</Typography>\r\n                      <Typography> Promotion: {this.getPromo()} $</Typography>\r\n                      <Typography>To Pay: {this.totalPrice() - this.getPromo()} $</Typography>\r\n                    </div>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={this.handleClose} color=\"primary\">\r\n                      Close\r\n                    </Button>\r\n                    <Button type=\"submit\" onClick={this.handleClose} color=\"primary\">\r\n                      Checkout\r\n                    </Button>\r\n                  </DialogActions>\r\n                </form>\r\n              </Dialog>\r\n            </div>\r\n          </div>\r\n          : <div>Card is empty!</div>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n//legatura componentului cu store\r\nexport default connect(\r\n  state => ({\r\n    cart: state.cart //primirea datelor  this.props cart => state.card\r\n  }),\r\n  dispatch => ({\r\n    deleteProduct: (payload) => {\r\n      dispatch({type: \"DELETE_PRODUCT\", payload})\r\n    },\r\n    modifyProductQuantity: (payload) => {\r\n      dispatch({type: \"MODIFY_PRODUCT\", payload})\r\n    }\r\n  })\r\n)(Cart);\r\n// dispatch cheama din store meetoda\r\n//payload datele care se transmit\r\n"]},"metadata":{},"sourceType":"module"}