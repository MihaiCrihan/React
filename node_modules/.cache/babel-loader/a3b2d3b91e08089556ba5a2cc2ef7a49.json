{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mihai\\\\Desktop\\\\react-configurator\\\\src\\\\views\\\\Orders.jsx\";\nimport React from 'react';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport { Paper } from '@material-ui/core';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\n\nclass Orders extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getOrders = () => {\n      return JSON.parse(localStorage.getItem('orders')) || [];\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.getOrders().length ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      className: \"custom-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 23\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }\n    }, \"Contacts\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 23\n      }\n    }, \"Products\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 23\n      }\n    }, \"Promo code\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 23\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 23\n      }\n    }, \"Total Price\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }, this.getOrders().map((item, index) => /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      className: \"custom-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 27\n      }\n    }, item.user.first_name, \" \", item.user.second_name), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 27\n      }\n    }, item.date), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }, item.user.phone), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, item.user.email)), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      dense: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, item.items.map((product, key) => {\n      const labelId = `checkbox-list-secondary-label-${key}`;\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: key,\n        button: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        src: require(\"../\" + product.product.image),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 39\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        id: labelId,\n        primary: product.product.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 39\n        }\n      }, \" \", product.quantity, \" x \", product.product.price, \" $\")));\n    }))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }\n    }, item.user.promo), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }\n    }, item.price, \" $\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 27\n      }\n    }, item.total, \" $\"))))))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, \"Orders is empty!\"));\n  }\n\n}\n\nexport default Orders;","map":{"version":3,"sources":["C:/Users/Mihai/Desktop/react-configurator/src/views/Orders.jsx"],"names":["React","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Paper","ListItemSecondaryAction","ListItemText","Avatar","ListItemAvatar","ListItem","List","Orders","Component","getOrders","JSON","parse","localStorage","getItem","render","length","map","item","index","user","first_name","second_name","date","phone","email","items","product","key","labelId","require","image","name","quantity","price","promo","total"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport {Paper} from '@material-ui/core'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport List from '@material-ui/core/List'\r\n\r\nclass Orders extends React.Component {\r\n  getOrders = () => {\r\n    return JSON.parse(localStorage.getItem('orders')) || []\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {\r\n          this.getOrders().length\r\n            ? <div>\r\n              <TableContainer component={Paper}>\r\n                <Table aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow className=\"custom-table\">\r\n                      <TableCell>Name</TableCell>\r\n                      <TableCell>Date</TableCell>\r\n                      <TableCell>Contacts</TableCell>\r\n                      <TableCell>Products</TableCell>\r\n                      <TableCell>Promo code</TableCell>\r\n                      <TableCell>Price</TableCell>\r\n                      <TableCell>Total Price</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {\r\n                      this.getOrders().map((item, index) =>\r\n                        <TableRow key={index} className=\"custom-table\">\r\n                          <TableCell component=\"th\" scope=\"row\">{item.user.first_name} {item.user.second_name}</TableCell>\r\n                          <TableCell>{item.date}</TableCell>\r\n                          <TableCell>\r\n                            <div>{item.user.phone}</div>\r\n                            <div>{item.user.email}</div>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <List dense>\r\n                              {item.items.map((product, key) => {\r\n                                const labelId = `checkbox-list-secondary-label-${key}`\r\n                                return (\r\n                                  <ListItem key={key} button>\r\n                                    <ListItemAvatar>\r\n                                      <Avatar\r\n                                        src={require(\"../\" + product.product.image)}\r\n                                      />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText id={labelId} primary={product.product.name}/>\r\n                                    <ListItemSecondaryAction>\r\n                                      <div> {product.quantity} x {product.product.price} $</div>\r\n                                    </ListItemSecondaryAction>\r\n                                  </ListItem>\r\n                                )\r\n                              })}\r\n                            </List>\r\n                          </TableCell>\r\n                          <TableCell>{item.user.promo}</TableCell>\r\n                          <TableCell>{item.price} $</TableCell>\r\n                          <TableCell>{item.total} $</TableCell>\r\n                        </TableRow>\r\n                      )\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n            : <div>Orders is empty!</div>\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders\r\n"]},"metadata":{},"sourceType":"module"}