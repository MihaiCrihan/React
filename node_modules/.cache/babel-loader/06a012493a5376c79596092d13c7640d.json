{"ast":null,"code":"import { ADD_PRODUCT, CLEAR_CART, DELETE_PRODUCT, MODIFY_PRODUCT } from \"../actionTypes\";\nconst initialState = [];\nexport default function (state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case ADD_PRODUCT:\n      {\n        const itemIndex = state.findIndex(item => item.type === payload.type);\n        const cart = state.slice();\n\n        if (itemIndex !== -1) {\n          if (payload.product.id === state[itemIndex].product.id) {\n            cart[itemIndex].quantity++;\n          } else {\n            const product = {\n              quantity: 1,\n              ...payload // obiectul care transmis in store pe click la card product\n\n            };\n            cart.splice(itemIndex, 1, product);\n          }\n        } else {\n          const product = {\n            quantity: 1,\n            ...payload\n          };\n          cart.push(product);\n        }\n\n        return cart;\n      }\n\n    case DELETE_PRODUCT:\n      {\n        const cart = state.slice();\n        cart.splice(payload, 1);\n        return cart;\n      }\n\n    case MODIFY_PRODUCT:\n      {\n        const cart = state.slice(); // payload avem index si quantity  | luam  state[payload.index] (element curent ) luam cimpurile de acolo si punem in item\n\n        cart.splice(payload.index, 1, { ...state[payload.index],\n          quantity: payload.itemQuantity\n        });\n        return cart;\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Mihai/Desktop/react-configurator/src/store/reducers/cart.js"],"names":["ADD_PRODUCT","CLEAR_CART","DELETE_PRODUCT","MODIFY_PRODUCT","initialState","state","type","payload","itemIndex","findIndex","item","cart","slice","product","id","quantity","splice","push","index","itemQuantity"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,UAArB,EAAiCC,cAAjC,EAAiDC,cAAjD,QAAsE,gBAAtE;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,UAAUC,KAAK,GAAGD,YAAlB,EAAgC;AAACE,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAhC,EAAiD;AAC9D,UAAQD,IAAR;AACE,SAAKN,WAAL;AAAkB;AAChB,cAAMQ,SAAS,GAAGH,KAAK,CAACI,SAAN,CAAgBC,IAAI,IAAIA,IAAI,CAACJ,IAAL,KAAcC,OAAO,CAACD,IAA9C,CAAlB;AACA,cAAMK,IAAI,GAAGN,KAAK,CAACO,KAAN,EAAb;;AAEA,YAAIJ,SAAS,KAAK,CAAC,CAAnB,EAAsB;AACpB,cAAID,OAAO,CAACM,OAAR,CAAgBC,EAAhB,KAAuBT,KAAK,CAACG,SAAD,CAAL,CAAiBK,OAAjB,CAAyBC,EAApD,EAAwD;AACtDH,YAAAA,IAAI,CAACH,SAAD,CAAJ,CAAgBO,QAAhB;AACD,WAFD,MAEO;AACL,kBAAMF,OAAO,GAAG;AACdE,cAAAA,QAAQ,EAAE,CADI;AAEd,iBAAGR,OAFW,CAEH;;AAFG,aAAhB;AAIAI,YAAAA,IAAI,CAACK,MAAL,CAAYR,SAAZ,EAAuB,CAAvB,EAA0BK,OAA1B;AACD;AACF,SAVD,MAUO;AACL,gBAAMA,OAAO,GAAG;AACdE,YAAAA,QAAQ,EAAE,CADI;AAEd,eAAGR;AAFW,WAAhB;AAIAI,UAAAA,IAAI,CAACM,IAAL,CAAUJ,OAAV;AACD;;AAGD,eAAOF,IAAP;AACD;;AACD,SAAKT,cAAL;AAAqB;AACnB,cAAMS,IAAI,GAAGN,KAAK,CAACO,KAAN,EAAb;AACAD,QAAAA,IAAI,CAACK,MAAL,CAAYT,OAAZ,EAAqB,CAArB;AACA,eAAOI,IAAP;AACD;;AAED,SAAKR,cAAL;AAAqB;AACnB,cAAMQ,IAAI,GAAGN,KAAK,CAACO,KAAN,EAAb,CADmB,CAElB;;AACDD,QAAAA,IAAI,CAACK,MAAL,CAAYT,OAAO,CAACW,KAApB,EAA2B,CAA3B,EAA8B,EAC5B,GAAGb,KAAK,CAACE,OAAO,CAACW,KAAT,CADoB;AAE5BH,UAAAA,QAAQ,EAAER,OAAO,CAACY;AAFU,SAA9B;AAIA,eAAOR,IAAP;AACD;;AACD;AACE,aAAON,KAAP;AA1CJ;AA4CD","sourcesContent":["import {ADD_PRODUCT, CLEAR_CART, DELETE_PRODUCT, MODIFY_PRODUCT} from \"../actionTypes\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, {type, payload}) {\r\n  switch (type) {\r\n    case ADD_PRODUCT: {\r\n      const itemIndex = state.findIndex(item => item.type === payload.type)\r\n      const cart = state.slice();\r\n\r\n      if (itemIndex !== -1) {\r\n        if (payload.product.id === state[itemIndex].product.id) {\r\n          cart[itemIndex].quantity++\r\n        } else {\r\n          const product = {\r\n            quantity: 1,\r\n            ...payload // obiectul care transmis in store pe click la card product\r\n          }\r\n          cart.splice(itemIndex, 1, product)\r\n        }\r\n      } else {\r\n        const product = {\r\n          quantity: 1,\r\n          ...payload\r\n        }\r\n        cart.push(product)\r\n      }\r\n\r\n\r\n      return cart;\r\n    }\r\n    case DELETE_PRODUCT: {\r\n      const cart = state.slice()\r\n      cart.splice(payload, 1)\r\n      return cart\r\n    }\r\n   \r\n    case MODIFY_PRODUCT: {\r\n      const cart = state.slice()\r\n       // payload avem index si quantity  | luam  state[payload.index] (element curent ) luam cimpurile de acolo si punem in item\r\n      cart.splice(payload.index, 1, {\r\n        ...state[payload.index],\r\n        quantity: payload.itemQuantity\r\n      })\r\n      return cart\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}